{"version":3,"sources":["webpack:///./wasm-bindings/pkg sync","webpack:///./wasm-bindings/pkg/index.js"],"names":["init","wasm","new_game","ret","Game","__wrap","new_mcts","MctsTree","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","length","written","cachegetUint8Memory","getUint8Memory","buffer","Uint8Array","passStringToWasm","Error","len","ptr","mem","offset","code","charCodeAt","slice","subarray","new_from_fen","fen","_assertNum","n","_assertClass","instance","klass","name","cachegetInt32Memory","getInt32Memory","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm","decode","get_fen","game","retptr","memi32","v0","heap","Array","fill","undefined","push","getObject","idx","heap_next","dropObject","takeObject","get_game_state","cpu_move","tree","isLikeNone","x","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","cachegetUint32Memory","getUint32Memory","logError","e","error","message","stack","toString","_","console","addHeapObject","obj","handleError","getArrayU8FromWasm","_assertBoolean","Piece","Object","freeze","BLANK","X","O","constructor","create","prototype","free","current_board","arg0","turn","winner","hash","n0","low0","high0","new","make_move","local_board","cell","undo_move","ZorbistHasher","__wbg_now_2ed7c83e40d461d6","Date","now","__wbindgen_json_parse","arg1","JSON","parse","__wbindgen_string_new","__wbindgen_object_drop_ref","__wbg_self_1801c027cb0e6124","self","__wbg_crypto_3e91f24788b1203d","crypto","__wbg_getRandomValues_7ecea3ecacbb2f9e","getRandomValues","__wbg_getRandomValues_f724b5822126eff7","arg2","__wbg_require_e89d842e759f0a4c","require","__wbg_randomFillSync_eae3007264ffc138","randomFillSync","__wbindgen_is_undefined","__wbg_error_4bb6c2a97407129a","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","ret0","ret1","__wbindgen_throw","__wbindgen_rethrow"],"mappings":"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","file":"0.bundle.worker.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./wasm-bindings/pkg sync recursive\";","import * as wasm from './index_bg.wasm';\n\n/**\n*/\nexport function init() {\n    wasm.init();\n}\n\n/**\n* @returns {Game}\n*/\nexport function new_game() {\n    const ret = wasm.new_game();\n    return Game.__wrap(ret);\n}\n\n/**\n* @returns {MctsTree}\n*/\nexport function new_mcts() {\n    const ret = wasm.new_mcts();\n    return MctsTree.__wrap(ret);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction passStringToWasm(arg) {\n\n    if (typeof(arg) !== 'string') throw new Error('expected a string argument');\n\n    let len = arg.length;\n    let ptr = wasm.__wbindgen_malloc(len);\n\n    const mem = getUint8Memory();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = wasm.__wbindgen_realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n        if (ret.read != arg.length) throw new Error('failed to pass whole string');\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} fen\n* @returns {Game}\n*/\nexport function new_from_fen(fen) {\n    const ret = wasm.new_from_fen(passStringToWasm(fen), WASM_VECTOR_LEN);\n    return Game.__wrap(ret);\n}\n\nfunction _assertNum(n) {\n    if (typeof(n) !== 'number') throw new Error('expected a number argument');\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet cachegetInt32Memory = null;\nfunction getInt32Memory() {\n    if (cachegetInt32Memory === null || cachegetInt32Memory.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n/**\n* @param {Game} game\n* @returns {string}\n*/\nexport function get_fen(game) {\n    const retptr = 8;\n    _assertNum(retptr);\n    _assertClass(game, Game);\n    if (game.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n    }\n    const ret = wasm.get_fen(retptr, game.ptr);\n    const memi32 = getInt32Memory();\n    const v0 = getStringFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n    wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n    return v0;\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {Game} game\n* @returns {any}\n*/\nexport function get_game_state(game) {\n    _assertClass(game, Game);\n    if (game.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n    }\n    const ret = wasm.get_game_state(game.ptr);\n    return takeObject(ret);\n}\n\n/**\n* @param {Game} game\n* @param {MctsTree} tree\n*/\nexport function cpu_move(game, tree) {\n    _assertClass(game, Game);\n    if (game.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n    }\n    _assertClass(tree, MctsTree);\n    if (tree.ptr === 0) {\n        throw new Error('Attempt to use a moved value');\n    }\n    wasm.cpu_move(game.ptr, tree.ptr);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction logError(e) {\n    let error = (function () {\n        try {\n            return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n        } catch(_) {\n            return \"<failed to stringify thrown value>\";\n        }\n    }());\n    console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n    throw e;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    if (typeof(heap_next) !== 'number') throw new Error('corrupt heap');\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction handleError(e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction _assertBoolean(n) {\n    if (typeof(n) !== 'boolean') {\n        throw new Error('expected a boolean argument');\n    }\n}\n/**\n*/\nexport const Piece = Object.freeze({ BLANK:0,X:1,O:2, });\n/**\n*/\nexport class Game {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        const obj = Object.create(Game.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_game_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get current_board() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        const ret = wasm.__wbg_get_game_current_board(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set current_board(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        if (!isLikeNone(arg0)) {\n            _assertNum(arg0);\n        }\n        wasm.__wbg_set_game_current_board(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get turn() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        const ret = wasm.__wbg_get_game_turn(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set turn(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(arg0);\n        wasm.__wbg_set_game_turn(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get winner() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        const ret = wasm.__wbg_get_game_winner(this.ptr);\n        return ret === 3 ? undefined : ret;\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set winner(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        if (!isLikeNone(arg0)) {\n            _assertNum(arg0);\n        }\n        wasm.__wbg_set_game_winner(this.ptr, isLikeNone(arg0) ? 3 : arg0);\n    }\n    /**\n    * @returns {BigInt}\n    */\n    get hash() {\n        const retptr = 8;\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(retptr);\n        _assertNum(this.ptr);\n        const ret = wasm.__wbg_get_game_hash(retptr, this.ptr);\n        const memi32 = getInt32Memory();\n        u32CvtShim[0] = memi32[retptr / 4 + 0];\n        u32CvtShim[1] = memi32[retptr / 4 + 1];\n        const n0 = uint64CvtShim[0];\n        return n0;\n    }\n    /**\n    * @param {BigInt} arg0\n    */\n    set hash(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        uint64CvtShim[0] = arg0;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        wasm.__wbg_set_game_hash(this.ptr, low0, high0);\n    }\n    /**\n    * @returns {Game}\n    */\n    static new() {\n        const ret = wasm.game_new();\n        return Game.__wrap(ret);\n    }\n    /**\n    * @param {number} local_board\n    * @param {number} cell\n    */\n    make_move(local_board, cell) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(local_board);\n        _assertNum(cell);\n        wasm.game_make_move(this.ptr, local_board, cell);\n    }\n    /**\n    */\n    undo_move() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.game_undo_move(this.ptr);\n    }\n}\n/**\n*/\nexport class MctsTree {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        const obj = Object.create(MctsTree.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_mctstree_free(ptr);\n    }\n}\n/**\n*/\nexport class ZorbistHasher {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_zorbisthasher_free(ptr);\n    }\n}\n\nexport const __wbg_now_2ed7c83e40d461d6 = function() {\n    try {\n        const ret = Date.now();\n        _assertNum(ret);\n        return ret;\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    const ret = JSON.parse(getStringFromWasm(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    const ret = getStringFromWasm(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_self_1801c027cb0e6124 = function() {\n    try {\n        try {\n            const ret = self.self;\n            return addHeapObject(ret);\n        } catch (e) {\n            handleError(e)\n        }\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbg_crypto_3e91f24788b1203d = function(arg0) {\n    try {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbg_getRandomValues_7ecea3ecacbb2f9e = function(arg0) {\n    try {\n        const ret = getObject(arg0).getRandomValues;\n        return addHeapObject(ret);\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbg_getRandomValues_f724b5822126eff7 = function(arg0, arg1, arg2) {\n    try {\n        getObject(arg0).getRandomValues(getArrayU8FromWasm(arg1, arg2));\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbg_require_e89d842e759f0a4c = function(arg0, arg1) {\n    try {\n        const ret = require(getStringFromWasm(arg0, arg1));\n        return addHeapObject(ret);\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbg_randomFillSync_eae3007264ffc138 = function(arg0, arg1, arg2) {\n    try {\n        getObject(arg0).randomFillSync(getArrayU8FromWasm(arg1, arg2));\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    const ret = getObject(arg0) === undefined;\n    _assertBoolean(ret);\n    return ret;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    const v0 = getStringFromWasm(arg0, arg1).slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n    try {\n        console.error(v0);\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    try {\n        const ret = new Error();\n        return addHeapObject(ret);\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    try {\n        const ret = getObject(arg1).stack;\n        const ret0 = passStringToWasm(ret);\n        const ret1 = WASM_VECTOR_LEN;\n        getInt32Memory()[arg0 / 4 + 0] = ret0;\n        getInt32Memory()[arg0 / 4 + 1] = ret1;\n    } catch (e) {\n        logError(e)\n    }\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm(arg0, arg1));\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\nwasm.__wbindgen_start();\n\n"],"sourceRoot":""}